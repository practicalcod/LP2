def is_safe(graph, color, node, c):
    for neighbor in graph[node]:
        if color[neighbor] == c:
            return False
    return True

def graph_coloring(graph, m, color, node):
    if node == len(graph):
        print("Color assignment:", color)
        return True
    for c in range(1, m+1):
        if is_safe(graph, color, node, c):
            color[node] = c
            if graph_coloring(graph, m, color, node+1):
                return True
            color[node] = 0
    return False

# Input
n = int(input("Enter number of vertices: "))
graph = [[] for _ in range(n)]
e = int(input("Enter number of edges: "))
for _ in range(e):
    u, v = map(int, input("Enter edge (u v): ").split())
    graph[u].append(v)
    graph[v].append(u)

m = int(input("Enter number of colors: "))
color = [0] * n
if not graph_coloring(graph, m, color, 0):
    print("No solution exists")



# Enter number of vertices: 4
# Enter number of edges: 5
# Enter edge (u v): 0 1
# Enter edge (u v): 0 2
# Enter edge (u v): 1 2
# Enter edge (u v): 1 3
# Enter edge (u v): 2 3
# Enter number of colors: 3


# Coloring of nodes: [1, 2, 3, 1]
